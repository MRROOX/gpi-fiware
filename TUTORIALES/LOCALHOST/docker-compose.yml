version: '3.3'

services:
  # Portainer
  # portainer:
  #   image: portainer/portainer
  #   container_name: portainer_fiware
  #   restart: on-failure
  #   ports:
  #     - "9999:9000"
  #     - "8008:8080"
  #   volumes:
  #     - type: volume
  #       source: vol_portainer_data
  #       target: /data
  #     - type: bind
  #       source: /usr/bin/docker
  #       target: /usr/bin/docker
  #     - type: bind
  #       source: /var/run/docker.sock
  #       target: /var/run/docker.sock

  # Orion Context Broker
  orion:
    image: fiware/orion
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      - fiware_orion_net
    ports:
      - "1026:1026"
    command: -dbhost mongo-db -logLevel DEBUG -noCache
    healthcheck:
      test: curl --fail -s http://orion:1026/version || exit 1
  
  # Angente IOT intermediario entre Orion y Dispositivo IOT 
  iot-agent:
    image: fiware/iotagent-ul:latest
    hostname: iot-agent
    container_name: fiware-iot-agent
    depends_on:
      - mongo-db
    ports:
      - "4041:4041"
      - "7896:7896"
    environment:
      - IOTA_CB_HOST=orion
      - IOTA_CB_PORT=1026
      - IOTA_NORTH_PORT=4041
      - IOTA_REGISTRY_TYPE=mongodb
      - IOTA_LOG_LEVEL=DEBUG
      - IOTA_TIMESTAMP=true
      - IOTA_CB_NGSI_VERSION=v2
      - IOTA_AUTOCAST=true
      - IOTA_MONGO_HOST=mongo-db
      - IOTA_MONGO_PORT=27017
      - IOTA_MONGO_DB=iotagentul
      - IOTA_HTTP_PORT=7896
      - IOTA_PROVIDER_URL=http://iot-agent:4041
    networks: 
      - fiware_orion_net

# Persistencia de Datos Utilizando Cygnus
  cygnus:
    image: fiware/cygnus-ngsi:latest
    hostname: cygnus
    container_name: fiware-cygnus
    depends_on:
        - mysql-db
        - orion
    ports:
        - "5050:5050"
        - "5080:5080"
    networks:
      - fiware_cygnus_net
    environment:
        - "CYGNUS_MYSQL_HOST=mysql-db"
        - "CYGNUS_MYSQL_PORT=3306"
        - "CYGNUS_MYSQL_USER=root"
        - "CYGNUS_MYSQL_PASS=123"
        - "CYGNUS_LOG_LEVEL=DEBUG"
        - "CYGNUS_SERVICE_PORT=5050"
        - "CYGNUS_API_PORT=5080"

  # Monitorizacion utilizando Grafana
  grafana:
    image: grafana/grafana:master
    depends_on:
        - crate-db
    ports:
        - "3000:3000"
    environment:
       # - GF_INSTALL_PLUGINS=https://github.com/raintank/crate-datasource/archive/master.zip;crate-datasource,grafana-clock-panel,grafana-worldmap-panel
       #- GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-worldmap-panel
      - GF_INSTALL_PLUGINS=https://github.com/orchestracities/grafana-map-plugin/archive/master.zip;grafana-map-plugin,grafana-clock-panel,grafana-worldmap-panel
    networks:
      - fiware_grafana_net
    volumes:
      - type: volume
        source: vol_grafana-conf
        target: /var/lib/grafana
  # Quantum Leap is persisting Short Term History to Crate-DB
  quantumleap:
    image: smartsdk/quantumleap:0.7.5
    container_name: fiware-quantumleap
    ports:
      - "8668:8668"
    networks:
      - fiware_grafana_net
      - fiware_orion_net
    depends_on:
      - crate-db
      - orion
      - mongo-db
    environment:
      - "CRATE_HOST=http://crate-db"
    healthcheck:
      test: curl --fail -s http://localhost:8668/v2/version || exit 1
  
  # DATABASES
  # MONGO DB solo para servicio de Orion
  mongo-db:
    image: mongo:3.6
    hostname: mongo-db
    container_name: db-mongo
    ports:
      - "27017:27017"
    command: --bind_ip_all --smallfiles
    networks:
      - fiware_orion_net
    volumes:
      - type: volume
        source: vol_mongo-db
        target: /data
    
  # MYSQL solo para utilizar Cygnus  
  mysql-db:
    restart: always
    image: mysql:5.7.16
    hostname: mysql-db
    container_name: mysql-db
    ports:
        - "3306:3306"
    environment:
        - "MYSQL_ROOT_PASSWORD=123"
        - "MYSQL_ROOT_HOST=%"
    networks:
      - fiware_cygnus_net
    volumes: 
      - type: volume
        source: vol_mysql-db
        target: /var/lib/mysql

  # Crate para utilizar Grafana  
  crate-db:
    image: crate:3.3.2
    hostname: crate-db
    container_name: db-crate
    ports:
      # Admin UI
      - "4200:4200"
      # Transport protocol
      - "4300:4300"
   # command: crate -Clicense.enterprise=false -Cauth.host_based.enabled=false  -Ccluster.name=democluster -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*"
    networks:
      - fiware_grafana_net
    command: -Ccluster.name=democluster -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*"
    volumes:
      - type: volume
        source: vol_crate-db
        target: /data

# Redes
networks:
  fiware_orion_net:
  fiware_cygnus_net:
  fiware_grafana_net:

# Volumenes para persistir la data.
volumes:
  vol_portainer_data:

  vol_mongo-db:
  vol_mysql-db:
  vol_crate-db:
  vol_grafana-conf:
  